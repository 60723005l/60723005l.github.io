{"version":3,"sources":["../node_modules/@material-ui/core/esm/styles/useTheme.js","components/BacisElement/MediaThemeCard.tsx","../node_modules/@material-ui/core/esm/Divider/Divider.js","../node_modules/@material-ui/core/esm/Paper/Paper.js","../node_modules/@material-ui/core/esm/styles/createStyles.js","../node_modules/@material-ui/core/esm/Typography/Typography.js","../node_modules/@material-ui/core/esm/Card/Card.js","../node_modules/@material-ui/core/esm/CardContent/CardContent.js","components/Home/MainBody/Skill/Frontend.tsx","components/Home/MainBody/Skill/Backend.tsx","pages/Home/Skill.tsx","components/BacisElement/ThemeBox.tsx"],"names":["useTheme","useThemeWithoutDefault","defaultTheme","useStyles","makeStyles","theme","createStyles","root","marginTop","spacing","padding","display","breakpoints","down","flexDirection","details","content","flex","mediaBox","width","justifyContent","left","position","transform","controls","alignItems","paddingLeft","paddingBottom","playIcon","height","MediaThemeCard","title","subtitle","image","classes","className","src","component","variant","color","Divider","React","props","ref","_props$absolute","absolute","_props$component","Component","_props$flexItem","flexItem","_props$light","light","_props$orientation","orientation","_props$role","role","undefined","_props$variant","other","_objectWithoutProperties","_extends","clsx","vertical","withStyles","margin","border","flexShrink","backgroundColor","palette","divider","bottom","inset","marginLeft","alpha","middle","marginRight","alignSelf","name","Paper","_props$square","square","_props$elevation","elevation","outlined","concat","rounded","elevations","shadows","forEach","shadow","index","boxShadow","background","paper","text","primary","transition","transitions","create","borderRadius","shape","styles","defaultVariantMapping","h1","h2","h3","h4","h5","h6","subtitle1","subtitle2","body1","body2","Typography","_props$align","align","_props$color","_props$display","_props$gutterBottom","gutterBottom","_props$noWrap","noWrap","_props$paragraph","paragraph","_props$variantMapping","variantMapping","capitalize","typography","caption","button","overline","srOnly","overflow","alignLeft","textAlign","alignCenter","alignRight","alignJustify","textOverflow","whiteSpace","marginBottom","colorInherit","colorPrimary","main","colorSecondary","secondary","colorTextPrimary","colorTextSecondary","colorError","error","displayInline","displayBlock","Card","_props$raised","raised","CardContent","Informations","Frontend","ThemeBox","map","info","Backend","Skill","group","fontWeight","description","children"],"mappings":"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","file":"static/js/7.f0e71cb8.chunk.js","sourcesContent":["import { useTheme as useThemeWithoutDefault } from '@material-ui/styles';\nimport React from 'react';\nimport defaultTheme from './defaultTheme';\nexport default function useTheme() {\n  var theme = useThemeWithoutDefault() || defaultTheme;\n\n  if (process.env.NODE_ENV !== 'production') {\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    React.useDebugValue(theme);\n  }\n\n  return theme;\n}","import React from 'react';\nimport { Theme, createStyles, makeStyles, useTheme } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport Typography from '@material-ui/core/Typography';\n\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n        marginTop: theme.spacing(3),\n        padding: theme.spacing(3),\n        display: 'flex',\n        [theme.breakpoints.down('sm')]: {\n            flexDirection: 'column',\n        }\n    },\n    details: {\n      display: 'flex',\n      flexDirection: 'column',\n    },\n    content: {\n      flex: '1 0 auto',\n    },\n    mediaBox: {\n        width: 200,\n        display: \"flex\",\n        flexDirection: \"column\",\n        justifyContent: \"center\",\n        [theme.breakpoints.down('sm')]: {\n            width: 150,\n            left: \"50%\",\n            position: \"relative\",\n            transform: \"translate(-50%, 0px)\"\n        },\n      '& > img': {\n          width: 150\n      }\n    },\n    controls: {\n      display: 'flex',\n      alignItems: 'center',\n      paddingLeft: theme.spacing(1),\n      paddingBottom: theme.spacing(1),\n    },\n    playIcon: {\n      height: 38,\n      width: 38,\n    },\n  }),\n);\n\ninterface IMediaThemeProps {\n    title: string\n    subtitle: string\n    content: string\n    image: string\n}\n\nconst MediaThemeCard = ({title, subtitle, content, image}: IMediaThemeProps) => {\n  const classes = useStyles();\n  const theme = useTheme();\n\n  return (\n    <Card className={classes.root}>\n        <div className={classes.mediaBox} >\n            <img src={image} />\n        </div>\n        <div className={classes.details}>\n        <CardContent className={classes.content}>\n            <Typography component=\"h5\" variant=\"h5\">{title}</Typography>\n            <Typography variant=\"subtitle1\"  color=\"textSecondary\">{subtitle}</Typography>\n        </CardContent>\n        <div className={classes.controls}>\n            <Typography variant=\"subtitle2\">{content}</Typography>\n        </div>\n        </div>\n    </Card>\n  );\n}\n\nexport { MediaThemeCard as default }\nexport type {IMediaThemeProps}","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport { alpha } from '../styles/colorManipulator';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      height: 1,\n      margin: 0,\n      // Reset browser default style.\n      border: 'none',\n      flexShrink: 0,\n      backgroundColor: theme.palette.divider\n    },\n\n    /* Styles applied to the root element if `absolute={true}`. */\n    absolute: {\n      position: 'absolute',\n      bottom: 0,\n      left: 0,\n      width: '100%'\n    },\n\n    /* Styles applied to the root element if `variant=\"inset\"`. */\n    inset: {\n      marginLeft: 72\n    },\n\n    /* Styles applied to the root element if `light={true}`. */\n    light: {\n      backgroundColor: alpha(theme.palette.divider, 0.08)\n    },\n\n    /* Styles applied to the root element if `variant=\"middle\"`. */\n    middle: {\n      marginLeft: theme.spacing(2),\n      marginRight: theme.spacing(2)\n    },\n\n    /* Styles applied to the root element if `orientation=\"vertical\"`. */\n    vertical: {\n      height: '100%',\n      width: 1\n    },\n\n    /* Styles applied to the root element if `flexItem={true}`. */\n    flexItem: {\n      alignSelf: 'stretch',\n      height: 'auto'\n    }\n  };\n};\nvar Divider = /*#__PURE__*/React.forwardRef(function Divider(props, ref) {\n  var _props$absolute = props.absolute,\n      absolute = _props$absolute === void 0 ? false : _props$absolute,\n      classes = props.classes,\n      className = props.className,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? 'hr' : _props$component,\n      _props$flexItem = props.flexItem,\n      flexItem = _props$flexItem === void 0 ? false : _props$flexItem,\n      _props$light = props.light,\n      light = _props$light === void 0 ? false : _props$light,\n      _props$orientation = props.orientation,\n      orientation = _props$orientation === void 0 ? 'horizontal' : _props$orientation,\n      _props$role = props.role,\n      role = _props$role === void 0 ? Component !== 'hr' ? 'separator' : undefined : _props$role,\n      _props$variant = props.variant,\n      variant = _props$variant === void 0 ? 'fullWidth' : _props$variant,\n      other = _objectWithoutProperties(props, [\"absolute\", \"classes\", \"className\", \"component\", \"flexItem\", \"light\", \"orientation\", \"role\", \"variant\"]);\n\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    className: clsx(classes.root, className, variant !== 'fullWidth' && classes[variant], absolute && classes.absolute, flexItem && classes.flexItem, light && classes.light, orientation === 'vertical' && classes.vertical),\n    role: role,\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? Divider.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * Absolutely position the element.\n   */\n  absolute: PropTypes.bool,\n\n  /**\n   * @ignore\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .elementType,\n\n  /**\n   * If `true`, a vertical divider will have the correct height when used in flex container.\n   * (By default, a vertical divider will have a calculated height of `0px` if it is the child of a flex container.)\n   */\n  flexItem: PropTypes.bool,\n\n  /**\n   * If `true`, the divider will have a lighter color.\n   */\n  light: PropTypes.bool,\n\n  /**\n   * The divider orientation.\n   */\n  orientation: PropTypes.oneOf(['horizontal', 'vertical']),\n\n  /**\n   * @ignore\n   */\n  role: PropTypes.string,\n\n  /**\n   * The variant to use.\n   */\n  variant: PropTypes.oneOf(['fullWidth', 'inset', 'middle'])\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiDivider'\n})(Divider);","import _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { chainPropTypes } from '@material-ui/utils';\nimport withStyles from '../styles/withStyles';\nexport var styles = function styles(theme) {\n  var elevations = {};\n  theme.shadows.forEach(function (shadow, index) {\n    elevations[\"elevation\".concat(index)] = {\n      boxShadow: shadow\n    };\n  });\n  return _extends({\n    /* Styles applied to the root element. */\n    root: {\n      backgroundColor: theme.palette.background.paper,\n      color: theme.palette.text.primary,\n      transition: theme.transitions.create('box-shadow')\n    },\n\n    /* Styles applied to the root element if `square={false}`. */\n    rounded: {\n      borderRadius: theme.shape.borderRadius\n    },\n\n    /* Styles applied to the root element if `variant=\"outlined\"`. */\n    outlined: {\n      border: \"1px solid \".concat(theme.palette.divider)\n    }\n  }, elevations);\n};\nvar Paper = /*#__PURE__*/React.forwardRef(function Paper(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? 'div' : _props$component,\n      _props$square = props.square,\n      square = _props$square === void 0 ? false : _props$square,\n      _props$elevation = props.elevation,\n      elevation = _props$elevation === void 0 ? 1 : _props$elevation,\n      _props$variant = props.variant,\n      variant = _props$variant === void 0 ? 'elevation' : _props$variant,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\", \"component\", \"square\", \"elevation\", \"variant\"]);\n\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    className: clsx(classes.root, className, variant === 'outlined' ? classes.outlined : classes[\"elevation\".concat(elevation)], !square && classes.rounded),\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? Paper.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .elementType,\n\n  /**\n   * Shadow depth, corresponds to `dp` in the spec.\n   * It accepts values between 0 and 24 inclusive.\n   */\n  elevation: chainPropTypes(PropTypes.number, function (props) {\n    var classes = props.classes,\n        elevation = props.elevation; // in case `withStyles` fails to inject we don't need this warning\n\n    if (classes === undefined) {\n      return null;\n    }\n\n    if (elevation != null && classes[\"elevation\".concat(elevation)] === undefined) {\n      return new Error(\"Material-UI: This elevation `\".concat(elevation, \"` is not implemented.\"));\n    }\n\n    return null;\n  }),\n\n  /**\n   * If `true`, rounded corners are disabled.\n   */\n  square: PropTypes.bool,\n\n  /**\n   * The variant to use.\n   */\n  variant: PropTypes.oneOf(['elevation', 'outlined'])\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiPaper'\n})(Paper);","import { createStyles as createStylesOriginal } from '@material-ui/styles'; // let warnOnce = false;\n// To remove in v5\n\nexport default function createStyles(styles) {\n  // warning(\n  //   warnOnce,\n  //   [\n  //     'Material-UI: createStyles from @material-ui/core/styles is deprecated.',\n  //     'Please use @material-ui/styles/createStyles',\n  //   ].join('\\n'),\n  // );\n  // warnOnce = true;\n  return createStylesOriginal(styles);\n}","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport capitalize from '../utils/capitalize';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      margin: 0\n    },\n\n    /* Styles applied to the root element if `variant=\"body2\"`. */\n    body2: theme.typography.body2,\n\n    /* Styles applied to the root element if `variant=\"body1\"`. */\n    body1: theme.typography.body1,\n\n    /* Styles applied to the root element if `variant=\"caption\"`. */\n    caption: theme.typography.caption,\n\n    /* Styles applied to the root element if `variant=\"button\"`. */\n    button: theme.typography.button,\n\n    /* Styles applied to the root element if `variant=\"h1\"`. */\n    h1: theme.typography.h1,\n\n    /* Styles applied to the root element if `variant=\"h2\"`. */\n    h2: theme.typography.h2,\n\n    /* Styles applied to the root element if `variant=\"h3\"`. */\n    h3: theme.typography.h3,\n\n    /* Styles applied to the root element if `variant=\"h4\"`. */\n    h4: theme.typography.h4,\n\n    /* Styles applied to the root element if `variant=\"h5\"`. */\n    h5: theme.typography.h5,\n\n    /* Styles applied to the root element if `variant=\"h6\"`. */\n    h6: theme.typography.h6,\n\n    /* Styles applied to the root element if `variant=\"subtitle1\"`. */\n    subtitle1: theme.typography.subtitle1,\n\n    /* Styles applied to the root element if `variant=\"subtitle2\"`. */\n    subtitle2: theme.typography.subtitle2,\n\n    /* Styles applied to the root element if `variant=\"overline\"`. */\n    overline: theme.typography.overline,\n\n    /* Styles applied to the root element if `variant=\"srOnly\"`. Only accessible to screen readers. */\n    srOnly: {\n      position: 'absolute',\n      height: 1,\n      width: 1,\n      overflow: 'hidden'\n    },\n\n    /* Styles applied to the root element if `align=\"left\"`. */\n    alignLeft: {\n      textAlign: 'left'\n    },\n\n    /* Styles applied to the root element if `align=\"center\"`. */\n    alignCenter: {\n      textAlign: 'center'\n    },\n\n    /* Styles applied to the root element if `align=\"right\"`. */\n    alignRight: {\n      textAlign: 'right'\n    },\n\n    /* Styles applied to the root element if `align=\"justify\"`. */\n    alignJustify: {\n      textAlign: 'justify'\n    },\n\n    /* Styles applied to the root element if `nowrap={true}`. */\n    noWrap: {\n      overflow: 'hidden',\n      textOverflow: 'ellipsis',\n      whiteSpace: 'nowrap'\n    },\n\n    /* Styles applied to the root element if `gutterBottom={true}`. */\n    gutterBottom: {\n      marginBottom: '0.35em'\n    },\n\n    /* Styles applied to the root element if `paragraph={true}`. */\n    paragraph: {\n      marginBottom: 16\n    },\n\n    /* Styles applied to the root element if `color=\"inherit\"`. */\n    colorInherit: {\n      color: 'inherit'\n    },\n\n    /* Styles applied to the root element if `color=\"primary\"`. */\n    colorPrimary: {\n      color: theme.palette.primary.main\n    },\n\n    /* Styles applied to the root element if `color=\"secondary\"`. */\n    colorSecondary: {\n      color: theme.palette.secondary.main\n    },\n\n    /* Styles applied to the root element if `color=\"textPrimary\"`. */\n    colorTextPrimary: {\n      color: theme.palette.text.primary\n    },\n\n    /* Styles applied to the root element if `color=\"textSecondary\"`. */\n    colorTextSecondary: {\n      color: theme.palette.text.secondary\n    },\n\n    /* Styles applied to the root element if `color=\"error\"`. */\n    colorError: {\n      color: theme.palette.error.main\n    },\n\n    /* Styles applied to the root element if `display=\"inline\"`. */\n    displayInline: {\n      display: 'inline'\n    },\n\n    /* Styles applied to the root element if `display=\"block\"`. */\n    displayBlock: {\n      display: 'block'\n    }\n  };\n};\nvar defaultVariantMapping = {\n  h1: 'h1',\n  h2: 'h2',\n  h3: 'h3',\n  h4: 'h4',\n  h5: 'h5',\n  h6: 'h6',\n  subtitle1: 'h6',\n  subtitle2: 'h6',\n  body1: 'p',\n  body2: 'p'\n};\nvar Typography = /*#__PURE__*/React.forwardRef(function Typography(props, ref) {\n  var _props$align = props.align,\n      align = _props$align === void 0 ? 'inherit' : _props$align,\n      classes = props.classes,\n      className = props.className,\n      _props$color = props.color,\n      color = _props$color === void 0 ? 'initial' : _props$color,\n      component = props.component,\n      _props$display = props.display,\n      display = _props$display === void 0 ? 'initial' : _props$display,\n      _props$gutterBottom = props.gutterBottom,\n      gutterBottom = _props$gutterBottom === void 0 ? false : _props$gutterBottom,\n      _props$noWrap = props.noWrap,\n      noWrap = _props$noWrap === void 0 ? false : _props$noWrap,\n      _props$paragraph = props.paragraph,\n      paragraph = _props$paragraph === void 0 ? false : _props$paragraph,\n      _props$variant = props.variant,\n      variant = _props$variant === void 0 ? 'body1' : _props$variant,\n      _props$variantMapping = props.variantMapping,\n      variantMapping = _props$variantMapping === void 0 ? defaultVariantMapping : _props$variantMapping,\n      other = _objectWithoutProperties(props, [\"align\", \"classes\", \"className\", \"color\", \"component\", \"display\", \"gutterBottom\", \"noWrap\", \"paragraph\", \"variant\", \"variantMapping\"]);\n\n  var Component = component || (paragraph ? 'p' : variantMapping[variant] || defaultVariantMapping[variant]) || 'span';\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    className: clsx(classes.root, className, variant !== 'inherit' && classes[variant], color !== 'initial' && classes[\"color\".concat(capitalize(color))], noWrap && classes.noWrap, gutterBottom && classes.gutterBottom, paragraph && classes.paragraph, align !== 'inherit' && classes[\"align\".concat(capitalize(align))], display !== 'initial' && classes[\"display\".concat(capitalize(display))]),\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? Typography.propTypes = {\n  /**\n   * Set the text-align on the component.\n   */\n  align: PropTypes.oneOf(['inherit', 'left', 'center', 'right', 'justify']),\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The color of the component. It supports those theme colors that make sense for this component.\n   */\n  color: PropTypes.oneOf(['initial', 'inherit', 'primary', 'secondary', 'textPrimary', 'textSecondary', 'error']),\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   * Overrides the behavior of the `variantMapping` prop.\n   */\n  component: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .elementType,\n\n  /**\n   * Controls the display type\n   */\n  display: PropTypes.oneOf(['initial', 'block', 'inline']),\n\n  /**\n   * If `true`, the text will have a bottom margin.\n   */\n  gutterBottom: PropTypes.bool,\n\n  /**\n   * If `true`, the text will not wrap, but instead will truncate with a text overflow ellipsis.\n   *\n   * Note that text overflow can only happen with block or inline-block level elements\n   * (the element needs to have a width in order to overflow).\n   */\n  noWrap: PropTypes.bool,\n\n  /**\n   * If `true`, the text will have a bottom margin.\n   */\n  paragraph: PropTypes.bool,\n\n  /**\n   * Applies the theme typography styles.\n   */\n  variant: PropTypes.oneOf(['h1', 'h2', 'h3', 'h4', 'h5', 'h6', 'subtitle1', 'subtitle2', 'body1', 'body2', 'caption', 'button', 'overline', 'srOnly', 'inherit']),\n\n  /**\n   * The component maps the variant prop to a range of different HTML element types.\n   * For instance, subtitle1 to `<h6>`.\n   * If you wish to change that mapping, you can provide your own.\n   * Alternatively, you can use the `component` prop.\n   */\n  variantMapping: PropTypes.object\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiTypography'\n})(Typography);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport Paper from '../Paper';\nimport withStyles from '../styles/withStyles';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {\n    overflow: 'hidden'\n  }\n};\nvar Card = /*#__PURE__*/React.forwardRef(function Card(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      _props$raised = props.raised,\n      raised = _props$raised === void 0 ? false : _props$raised,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\", \"raised\"]);\n\n  return /*#__PURE__*/React.createElement(Paper, _extends({\n    className: clsx(classes.root, className),\n    elevation: raised ? 8 : 1,\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? Card.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * If `true`, the card will use raised styling.\n   */\n  raised: PropTypes.bool\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiCard'\n})(Card);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {\n    padding: 16,\n    '&:last-child': {\n      paddingBottom: 24\n    }\n  }\n};\nvar CardContent = /*#__PURE__*/React.forwardRef(function CardContent(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? 'div' : _props$component,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\", \"component\"]);\n\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    className: clsx(classes.root, className),\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? CardContent.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .elementType\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiCardContent'\n})(CardContent);","import React from \"react\";\nimport ThemeBox from \"../../../BacisElement/ThemeBox\";\nimport MediaThemeCard, { IMediaThemeProps } from \"../../../BacisElement/MediaThemeCard\"\nconst Informations: Array<IMediaThemeProps> = [\n    {\n        title: 'Vue',\n        subtitle: 'Vuex, Vue material, mixin, event bus',\n        content: `熟悉元件life cycle, Vuex全域狀態管理，並且視需求使用用mixin減少程式複用，以及event bus處理相對單純的全域事件`,\n        image: \"/image/logo-vue.png\"\n    },\n    {\n        title: 'React',\n        subtitle: 'Redux, Typescript, Material UI',\n        content: `具備React搭配Typescript開發經驗，熟悉Functional component以及hooks的使用方式。 具備使用Material ui, Tailwind, scss等樣式工具經驗`,\n        image: \"/image/logo-react.png\"\n    },\n    {\n        title: 'Cesium.js',\n        subtitle: 'WebGL library, 3D GIS',\n        content: `具備 Cesium 搭配 Vue, React等框架之開發經驗， 並且熟悉大部分Library使用方式`,\n        image: \"/image/logo-cesium.png\"\n    },\n    {\n        title: 'Leaflet.js',\n        subtitle: 'WebGL library, 2D GIS',\n        content: `具備 Leaflet 搭配 Vue 前端框架之開發經驗， 並且熟悉大部分Library使用方式`,\n        image: \"/image/logo-leaflet.png\"\n    },\n]\n\n\n\n\nconst Frontend = () => \n{\n    return (\n        <ThemeBox title=\"前端\">\n            {\n                Informations.map( (info, index) => (\n                    <MediaThemeCard key={index} {...info} />\n                ))\n            }\n        </ThemeBox>\n            \n    )\n}\n\nexport { Frontend as default }\n","import React from \"react\";\nimport ThemeBox from \"../../../BacisElement/ThemeBox\";\nimport MediaThemeCard, { IMediaThemeProps } from \"../../../BacisElement/MediaThemeCard\"\nconst Informations: Array<IMediaThemeProps> = [\n    {\n        title: 'Express',\n        subtitle: 'WebServer, API',\n        content: `具備開發Express router, middleware等經驗, 並搭配其他ORM package與資料庫溝通、開發API`,\n        image: \"/image/logo-express.png\"\n    },\n    {\n        title: 'Sequelize',\n        subtitle: 'ORM, sequelize-cli',\n        content: `具備使用sequelize-cli建立專案、migrage、seeding等經驗`,\n        image: \"/image/logo-sequelize.png\"\n    },\n    {\n        title: 'TypeORM',\n        subtitle: 'ORM, TypeScript',\n        content: `使用TypeORM並以TypeScript開發更嚴謹的後端程式`,\n        image: \"/image/logo-typeorm.png\"\n    },\n    {\n        title: 'PostgreSQL',\n        subtitle: 'Database, PostGIS',\n        content: `除了將PG作為一般資料庫使用，也具備使用PostGIS extension的開發經驗，進行更有效的空間資料查詢與分析`,\n        image: \"/image/logo-postgresql.png\"\n    },\n]\n\n\n\n\nconst Backend = () => \n{\n    return (\n        <ThemeBox title=\"後端\">\n            {\n                Informations.map( (info, index) => (\n                    <MediaThemeCard key={index} {...info} />\n                ))\n            }\n        </ThemeBox>\n            \n    )\n}\n\nexport { Backend as default }\n","import React from \"react\";\nimport ThemeBox from \"../../components/BacisElement/ThemeBox\";\nimport { makeStyles } from \"@material-ui/styles\";\nimport Frontend from \"../../components/Home/MainBody/Skill/Frontend\"\nimport Backend from \"../../components/Home/MainBody/Skill/Backend\"\n\nconst useStyles = makeStyles(theme=> ({\n    root: {\n        background: \"white\"\n    }\n}))\nconst Skill = () => \n{\n    const classes = useStyles();\n    return (\n        <div className={classes.root}>\n            <Frontend />\n            <Backend />\n            <ThemeBox title=\"其他\">\n                <span>其他</span>\n            </ThemeBox>\n        </div>\n    )\n}\n\nexport default Skill","import React from \"react\";\nimport { makeStyles, createStyles, Theme } from '@material-ui/core/styles';\nimport { Typography, Divider } from \"@material-ui/core\";\n\n\nconst useStyles = makeStyles((theme: Theme)=> ({\n    group: {\n        margin: theme.spacing(1),\n        border: \"1px solid #e6e6e6\",\n        borderRadius: 5\n    },\n    title: {\n        margin: theme.spacing(2),\n        fontWeight: \"bold\"\n    },\n    description: {\n        margin: theme.spacing(5),\n        [theme.breakpoints.down('sm')]: {\n            flexDirection: 'column',\n            margin: theme.spacing(1),\n        }\n    }\n}))\n\ninterface Props {\n    children: JSX.Element | Array<JSX.Element>,\n    title: string,\n}\n\nconst ThemeBox = ({children, title}: Props) => \n{\n    const classes = useStyles();\n    return (\n        <div className={classes.group}>\n            <Typography color=\"primary\" className={classes.title} variant=\"h6\">{title}</Typography>\n            <Divider/>\n            <div className={classes.description}>\n                {children}  \n            </div>\n                      \n        </div>\n            \n    )\n}\n\nexport default ThemeBox\n"],"sourceRoot":""}