{"version":3,"sources":["../node_modules/@material-ui/core/esm/Divider/Divider.js","../node_modules/@material-ui/core/esm/styles/createStyles.js","pages/Home/Project.tsx","components/BacisElement/ThemeBox.tsx"],"names":["Divider","React","props","ref","_props$absolute","absolute","classes","className","_props$component","component","Component","_props$flexItem","flexItem","_props$light","light","_props$orientation","orientation","_props$role","role","undefined","_props$variant","variant","other","_objectWithoutProperties","_extends","clsx","root","vertical","withStyles","theme","height","margin","border","flexShrink","backgroundColor","palette","divider","position","bottom","left","width","inset","marginLeft","alpha","middle","spacing","marginRight","alignSelf","name","createStyles","styles","useStyles","makeStyles","mediaBox","display","flexDirection","justifyContent","alignItems","padding","breakpoints","down","projectList","title","link","img_srcs","contentText","Project","map","project","index2","src","index3","color","href","text","index","paragraph","group","borderRadius","fontWeight","description","ThemeBox","children"],"mappings":"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","file":"static/js/10.649f69d0.chunk.js","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport { alpha } from '../styles/colorManipulator';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      height: 1,\n      margin: 0,\n      // Reset browser default style.\n      border: 'none',\n      flexShrink: 0,\n      backgroundColor: theme.palette.divider\n    },\n\n    /* Styles applied to the root element if `absolute={true}`. */\n    absolute: {\n      position: 'absolute',\n      bottom: 0,\n      left: 0,\n      width: '100%'\n    },\n\n    /* Styles applied to the root element if `variant=\"inset\"`. */\n    inset: {\n      marginLeft: 72\n    },\n\n    /* Styles applied to the root element if `light={true}`. */\n    light: {\n      backgroundColor: alpha(theme.palette.divider, 0.08)\n    },\n\n    /* Styles applied to the root element if `variant=\"middle\"`. */\n    middle: {\n      marginLeft: theme.spacing(2),\n      marginRight: theme.spacing(2)\n    },\n\n    /* Styles applied to the root element if `orientation=\"vertical\"`. */\n    vertical: {\n      height: '100%',\n      width: 1\n    },\n\n    /* Styles applied to the root element if `flexItem={true}`. */\n    flexItem: {\n      alignSelf: 'stretch',\n      height: 'auto'\n    }\n  };\n};\nvar Divider = /*#__PURE__*/React.forwardRef(function Divider(props, ref) {\n  var _props$absolute = props.absolute,\n      absolute = _props$absolute === void 0 ? false : _props$absolute,\n      classes = props.classes,\n      className = props.className,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? 'hr' : _props$component,\n      _props$flexItem = props.flexItem,\n      flexItem = _props$flexItem === void 0 ? false : _props$flexItem,\n      _props$light = props.light,\n      light = _props$light === void 0 ? false : _props$light,\n      _props$orientation = props.orientation,\n      orientation = _props$orientation === void 0 ? 'horizontal' : _props$orientation,\n      _props$role = props.role,\n      role = _props$role === void 0 ? Component !== 'hr' ? 'separator' : undefined : _props$role,\n      _props$variant = props.variant,\n      variant = _props$variant === void 0 ? 'fullWidth' : _props$variant,\n      other = _objectWithoutProperties(props, [\"absolute\", \"classes\", \"className\", \"component\", \"flexItem\", \"light\", \"orientation\", \"role\", \"variant\"]);\n\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    className: clsx(classes.root, className, variant !== 'fullWidth' && classes[variant], absolute && classes.absolute, flexItem && classes.flexItem, light && classes.light, orientation === 'vertical' && classes.vertical),\n    role: role,\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? Divider.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * Absolutely position the element.\n   */\n  absolute: PropTypes.bool,\n\n  /**\n   * @ignore\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .elementType,\n\n  /**\n   * If `true`, a vertical divider will have the correct height when used in flex container.\n   * (By default, a vertical divider will have a calculated height of `0px` if it is the child of a flex container.)\n   */\n  flexItem: PropTypes.bool,\n\n  /**\n   * If `true`, the divider will have a lighter color.\n   */\n  light: PropTypes.bool,\n\n  /**\n   * The divider orientation.\n   */\n  orientation: PropTypes.oneOf(['horizontal', 'vertical']),\n\n  /**\n   * @ignore\n   */\n  role: PropTypes.string,\n\n  /**\n   * The variant to use.\n   */\n  variant: PropTypes.oneOf(['fullWidth', 'inset', 'middle'])\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiDivider'\n})(Divider);","import { createStyles as createStylesOriginal } from '@material-ui/styles'; // let warnOnce = false;\n// To remove in v5\n\nexport default function createStyles(styles) {\n  // warning(\n  //   warnOnce,\n  //   [\n  //     'Material-UI: createStyles from @material-ui/core/styles is deprecated.',\n  //     'Please use @material-ui/styles/createStyles',\n  //   ].join('\\n'),\n  // );\n  // warnOnce = true;\n  return createStylesOriginal(styles);\n}","import { Typography, Button } from \"@material-ui/core\";\nimport { Theme, createStyles, makeStyles, useTheme } from '@material-ui/core/styles';\nimport React from \"react\";\nimport ThemeBox from '../../components/BacisElement/ThemeBox'\n\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    mediaBox: {\n        width: '100%',\n        display: \"flex\",\n        flexDirection: \"column\",\n        justifyContent: \"center\",\n        alignItems: 'center',\n        padding: 10,\n        [theme.breakpoints.down('sm')]: {\n            width: '90%',\n            position: \"relative\",\n        },\n      '& > img': {\n          width: 'inherit'\n      }\n    }\n  }),\n);\n\ninterface IProjectItem {\n    title: string,\n    link?: string,\n    contentText: any[],\n    img_srcs: string[]\n}\n\nconst projectList: Array<IProjectItem> = [\n    {\n        title: '浸水營數位走讀地圖',\n        link: 'https://map.jsdc.com.tw/webgis/dguidewalks/s0002',\n        img_srcs: ['/image/proj-s0002.png'],\n        contentText: [\n            '',\n            `呈現景點與路徑的地圖資訊，景點資訊與外部CMS網頁內容連動。\n            介接氣象API, 顯示路線範圍行政區的天氣資訊。`,\n            `\n            前端：\n            使用Vue, Leaflet。\n            `,\n            `\n            後端：\n            後端使用 Node + Express + Sequelize + PostgreSQL + PostGIS。\n            `\n        ]\n    },\n    {\n        title: '宗教與民俗文化地圖',\n        link: 'https://map.jsdc.com.tw/webgis/trfc',\n        img_srcs: ['/image/proj-trfc.png'],\n        contentText: [\n            '',\n            `以空間或類別欄位查詢POI，避免過多POI干擾視覺，以cluster的方式顯示`,\n            `\n            前端：\n            使用Vue, Leaflet。\n            `,\n            `\n            後端：\n            後端使用 Node + Express + Sequelize + PostgreSQL + PostGIS。\n            `\n        ]\n    },\n    {\n        title: '原住民知識地圖',\n        link: 'https://map.jsdc.com.tw/webgis/ioe',\n        img_srcs: ['/image/proj-ioe.png'],\n        contentText: [\n            '',\n            `以較高彈性的查詢邏輯篩選POI，同時呈現當前查詢結果中各項類別主題的查詢數量，點擊查詢結果可與地圖互動將視角飛行至該位置`,\n            `\n            前端：\n            使用Vue, Leaflet。\n            `,\n            `\n            後端：\n            後端使用 Node + TypeScript + Express + TypeORM + PostgreSQL + PostGIS。\n            `\n        ]\n    },\n    {\n        title: '3D建築物地圖',\n        link: 'https://map.jsdc.com.tw/webgis/3Dmap',\n        img_srcs: ['/image/proj-3dmap.png'],\n        contentText: [\n            '',\n            `介接內政部3DTILE格式之3D地圖，製作簡易圖層清單`,\n            `\n            前端：\n            使用React, TypeScript, Material UI, Cesium\n            `\n        ]\n    },\n    {\n        title: '遠傳TPKC GIS平台',\n        img_srcs: ['/image/proj-tpkc1.png', '/image/proj-tpkc2.png', '/image/proj-tpkc3.png'],\n        contentText: [\n            '',\n            `GIS圖台，提供使用者建立地圖專案、上傳並管理模型與地圖資料。`,\n            `具備使用者權限管理、地圖專案發佈管理、模型與地圖資料之版本控制`,\n            `\n            前端：\n            使用Vue, Vue Material, Cesium\n            `\n        ]\n    }\n]\n\n\nconst Project = () => \n{\n    const classes = useStyles();\n    return (\n        <>\n        {\n            projectList.map((project, index2) => (\n                <ThemeBox key={index2} title={project.title}>\n                    {\n                    <>\n                        <div className={classes.mediaBox} >\n                            {\n                                project.img_srcs.map((src, index3) => (\n                                    <img key={index3} src={src} />\n                                ))\n                            }\n                        </div>\n                        {\n                            project.link\n                                ? (\n                                    <Button variant='outlined' color=\"primary\" href={project.link}>前往</Button>\n                                ) : null\n                        }\n                        {\n                            project.contentText.map( ( text, index ) =>(\n                                <Typography variant=\"subtitle1\" paragraph={true} key={index}>{text}</Typography>                            \n                            ))\n                        }\n                    </>\n                    }\n                </ThemeBox>\n            ))\n        }\n        </> \n    )\n}\n\nexport { Project as default }\n","import React from \"react\";\nimport { makeStyles, createStyles, Theme } from '@material-ui/core/styles';\nimport { Typography, Divider } from \"@material-ui/core\";\n\n\nconst useStyles = makeStyles((theme: Theme)=> ({\n    group: {\n        margin: theme.spacing(1),\n        border: \"1px solid #e6e6e6\",\n        borderRadius: 5\n    },\n    title: {\n        margin: theme.spacing(2),\n        fontWeight: \"bold\"\n    },\n    description: {\n        margin: theme.spacing(5),\n        [theme.breakpoints.down('sm')]: {\n            flexDirection: 'column',\n            margin: theme.spacing(1),\n        }\n    }\n}))\n\ninterface Props {\n    children: JSX.Element | Array<JSX.Element>,\n    title: string,\n}\n\nconst ThemeBox = ({children, title}: Props) => \n{\n    const classes = useStyles();\n    return (\n        <div className={classes.group}>\n            <Typography color=\"primary\" className={classes.title} variant=\"h6\">{title}</Typography>\n            <Divider/>\n            <div className={classes.description}>\n                {children}  \n            </div>\n                      \n        </div>\n            \n    )\n}\n\nexport default ThemeBox\n"],"sourceRoot":""}