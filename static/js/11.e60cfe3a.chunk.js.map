{"version":3,"sources":["components/Home/Header.tsx","components/Home/src/SidebarList.ts","components/Home/Sidebar.tsx","pages/Home/Home.tsx"],"names":["useStyles","makeStyles","theme","root","display","appBar","zIndex","drawer","transition","transitions","create","easing","sharp","duration","leavingScreen","appBarShift","marginLeft","width","enteringScreen","menuButton","marginRight","hide","title","flexGrow","Header","props","classes","AppBar","position","className","clsx","open","Toolbar","IconButton","color","onClick","toggleDrawer","edge","Typography","variant","noWrap","SidebarList","icon","Person","action","history","push","pathname","Code","ArtTrack","drawerWidth","flexShrink","whiteSpace","drawerOpen","drawerClose","overflowX","spacing","breakpoints","up","toolbar","alignItems","justifyContent","padding","mixins","content","Sidebar","onClose","useTheme","useHistory","Drawer","paper","direction","Divider","List","map","item","index","ListItem","button","handleItemClick","ListItemIcon","ListItemText","primary","background","Home","React","useState","setOpen","handleToggle","CssBaseline","routes","route","i","RouteWithSubRoutes"],"mappings":"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","file":"static/js/11.e60cfe3a.chunk.js","sourcesContent":["import React from \"react\";\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuIcon from '@material-ui/icons/Menu';\n\n\nconst drawerWidth = 240;\nconst useStyles = makeStyles((theme) => ({\n    root: {\n      display: 'flex',\n    },\n    appBar: {\n      zIndex: theme.zIndex.drawer + 1,\n      transition: theme.transitions.create(['width', 'margin'], {\n        easing: theme.transitions.easing.sharp,\n        duration: theme.transitions.duration.leavingScreen,\n      }),\n    },\n    appBarShift: {\n      marginLeft: drawerWidth,\n      width: `calc(100% - ${drawerWidth}px)`,\n      transition: theme.transitions.create(['width', 'margin'], {\n        easing: theme.transitions.easing.sharp,\n        duration: theme.transitions.duration.enteringScreen,\n      }),\n    },\n    menuButton: {\n      marginRight: 36,\n    },\n    hide: {\n      display: 'none',\n    },\n    title: {\n      flexGrow: 1,\n    },\n  }));\n\n  interface Props {\n    open: boolean\n    toggleDrawer: (bool: boolean) => void\n  }\n  const Header = (props: Props) =>\n  {\n    const classes = useStyles();\n    return(\n        \n            <AppBar \n              position=\"fixed\"\n              className={clsx(classes.appBar, {\n                [classes.appBarShift]: props.open,\n              })}>\n                <Toolbar>\n                <IconButton \n                  color=\"inherit\"\n                  aria-label=\"open drawer\"\n                  onClick={() => {props.toggleDrawer(true)} }\n                  edge=\"start\"\n                  className={clsx(classes.menuButton, {\n                    [classes.hide]: props.open,\n                  })}\n                >\n                    <MenuIcon />\n                </IconButton>\n                <Typography variant=\"h6\" noWrap>\n                    Andy.Chen\n                </Typography>\n                {/* <Button color=\"inherit\">Login</Button> */}\n                </Toolbar>\n            </AppBar>\n    )\n  }\n\nexport default Header","import { SidebarItem } from \"../interface\"\nimport { Person, ArtTrack, Code } from '@material-ui/icons';\n\nconst SidebarList: Array<SidebarItem> = [\n    {\n        icon: Person,\n        title: \"About\",\n        action: (history) =>\n        {\n            history.push({\n                pathname: '/Home',\n              })\n        }\n    },\n    {\n        icon: Code,\n        title: \"Skill\",\n        action: (history) =>\n        {\n            history.push({\n                pathname: '/Home/skill',\n              })\n        }\n    },\n    {\n        icon: ArtTrack,\n        title: \"Project\",\n        action: (history) =>\n        {\n            history.push({\n                pathname: '/Home/project',\n              })\n        }\n    }\n]\n\nexport default SidebarList","import React from \"react\";\nimport clsx from 'clsx';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Drawer from '@material-ui/core/Drawer';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport IconButton from '@material-ui/core/IconButton';\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\nimport Divider from '@material-ui/core/Divider';\nimport SidebarList from \"./src/SidebarList\";\nimport { SidebarItem } from \"./interface\";\nimport { useHistory } from \"react-router-dom\";\n\nconst drawerWidth = 240;\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: 'flex',\n  },\n  appBar: {\n    zIndex: theme.zIndex.drawer + 1,\n    transition: theme.transitions.create(['width', 'margin'], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n  },\n  appBarShift: {\n    marginLeft: drawerWidth,\n    width: `calc(100% - ${drawerWidth}px)`,\n    transition: theme.transitions.create(['width', 'margin'], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n  },\n  menuButton: {\n    marginRight: 36,\n  },\n  hide: {\n    display: 'none',\n  },\n  drawer: {\n    width: drawerWidth,\n    flexShrink: 0,\n    whiteSpace: 'nowrap',\n  },\n  drawerOpen: {\n    width: drawerWidth,\n    transition: theme.transitions.create('width', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n  },\n  drawerClose: {\n    transition: theme.transitions.create('width', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n    overflowX: 'hidden',\n    width: theme.spacing(7) + 1,\n    [theme.breakpoints.up('sm')]: {\n      width: theme.spacing(9) + 1,\n    },\n  },\n  toolbar: {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'flex-end',\n    padding: theme.spacing(0, 1),\n    // necessary for content to be below app bar\n    ...theme.mixins.toolbar,\n  },\n  content: {\n    flexGrow: 1,\n    padding: theme.spacing(3),\n  },\n}));\n\n\ninterface Props {\n  open: boolean\n  onClose: () => void\n}\n\n\nconst Sidebar = ({open, onClose }: Props) => {\n  const classes = useStyles();\n  const theme = useTheme();\n\n  const history = useHistory()\n  const handleItemClick = (item: SidebarItem): void =>\n  {\n    item.action(history)\n  }\n  return (\n      <Drawer \n        variant=\"permanent\"\n        className={clsx(classes.drawer, {\n          [classes.drawerOpen]: open,\n          [classes.drawerClose]: !open,\n        })}\n        classes={{\n          paper: clsx({\n            [classes.drawerOpen]: open,\n            [classes.drawerClose]: !open,\n          }),\n        }}>\n\n          <div className={classes.toolbar}>\n            <IconButton onClick={onClose}>\n              {theme.direction === 'rtl' ? <ChevronRightIcon /> : <ChevronLeftIcon />}\n            </IconButton>\n          </div>\n          <Divider />\n          <List>\n            {SidebarList.map((item, index) => (\n              <ListItem button key={index} onClick={ () => { handleItemClick(item) } }>\n                <ListItemIcon>{<item.icon />}</ListItemIcon>\n                <ListItemText primary={item.title} />\n              </ListItem>\n            ))}\n          </List>\n      </Drawer>\n  );\n}\n\nexport default Sidebar","import React, { FC } from \"react\";\nimport { Header, Sidebar } from \"../../components/Home\";\nimport { makeStyles } from '@material-ui/core/styles';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport { Switch } from \"react-router-dom\";\nimport RouteWithSubRoutes from \"../../routes/RouteWithSubRoutes\";\nimport { RouteComponentProps } from \"react-router-dom\";\nimport { RouteItem } from \"../../routes/interface\";\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n      display: 'flex',\n      background: \"#f5f5f5\"\n    },\n    toolbar: {\n      display: 'flex',\n      alignItems: 'center',\n      justifyContent: 'flex-end',\n      padding: theme.spacing(0, 1),\n      // necessary for content to be below app bar\n      ...theme.mixins.toolbar,\n    },\n    content: {\n      flexGrow: 1,\n      padding: theme.spacing(1),\n    },\n  }));\n\n\nconst Home = (props: RouteComponentProps<any> & RouteItem) =>\n{\n    const classes = useStyles();\n    const [open, setOpen] = React.useState(false);\n    const handleToggle = (open: boolean) => {\n        setOpen(open);\n    };\n    return(\n      <div className={classes.root}>\n        <CssBaseline />\n            <Header open={open} toggleDrawer={handleToggle}/>\n            <Sidebar open={open} onClose={() => {handleToggle(false)}}/>\n            <main className={classes.content}>\n                <div className={classes.toolbar} />\n                <Switch>\n                    {\n                        props.routes?.map( ( route, i ) =>\n                        (\n                        <RouteWithSubRoutes key={i} {...route}/>\n                        ))\n                    }\n                </Switch>\n            </main>\n        </div>\n    )\n}\n\nexport default Home"],"sourceRoot":""}