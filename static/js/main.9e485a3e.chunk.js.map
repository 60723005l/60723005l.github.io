{"version":3,"sources":["pages/Loading.tsx","routes/RouteWithSubRoutes.tsx","routes/index.ts","App.tsx","reportWebVitals.ts","index.tsx"],"names":["useStyle","makeStyles","loading","position","top","left","height","width","circle","transform","Loading","classes","className","RouteWithSubRoutes","route","path","render","props","component","routes","Login","Loadable","loader","Home","About","Skill","Project","exact","App","map","i","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"mHAAA,yCAIMA,EAAWC,aAAY,iBACxB,CACGC,QAAQ,CACJC,SAAU,WACVC,IAAK,MACLC,KAAM,MACNC,OAAQ,OACRC,MAAO,QAEXC,OAAO,CACHL,SAAU,WACVC,IAAK,MACLC,KAAM,MACNI,UAAW,6BAiBRC,UAZC,WAEZ,IAAMC,EAAUX,IAChB,OACI,qBAAKY,UAAWD,EAAQT,QAAxB,SACI,qBAAKU,UAAWD,EAAQH,OAAxB,SACI,cAAC,IAAD,U,iECZDK,IAZiC,SAACC,GAC7C,OACE,cAAC,IAAD,CACEC,KAAMD,EAAMC,KACZC,OAAQ,SAAAC,GAAK,OAEX,aADA,CACCH,EAAMI,UAAP,2BAAqBD,GAArB,IAA4BE,OAAQL,EAAMK,e,sLCN9CC,EAAQC,IAAS,CACnBC,OAAQ,kBAAM,4DACdpB,QAASQ,YAEPa,EAAOF,IAAS,CACpBC,OAAQ,kBAAM,6DACdpB,QAASQ,YAELc,EAAQH,IAAS,CACrBC,OAAQ,kBAAM,6DACdpB,QAASQ,YAELe,EAAQJ,IAAS,CACrBC,OAAQ,kBAAM,+BACdpB,QAASQ,YAELgB,EAAUL,IAAS,CACvBC,OAAQ,kBAAM,qDACdpB,QAASQ,YAwBMS,EAfkB,CAC/B,CAACJ,KAAM,IAAKY,OAAO,EAAMT,UAAWE,GACpC,CAACL,KAAM,WAAYY,OAAO,EAAMT,UAThBG,IAAS,CAC3BC,OAAQ,kBAAM,yCACdpB,QAASQ,aAQP,CAACK,KAAM,QAASG,UAAWK,EAAMJ,OAAQ,CACvC,CAACJ,KAAM,QAASY,OAAO,EAAMT,UAAWM,GACxC,CAACT,KAAM,cAAeY,OAAO,EAAMT,UAAWO,GAC9C,CAACV,KAAM,gBAAiBY,OAAO,EAAMT,UAAWQ,M,OChBvCE,EAhBC,WACd,OACE,cAAC,IAAD,UACE,cAAC,IAAD,UAEIT,EAAOU,KAAK,SAAEf,EAAOgB,GAAT,OAER,cAACjB,EAAA,EAAD,eAAgCC,GAAPgB,WCExBC,G,MAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,+BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,QCFdQ,IAASxB,OACP,cAAC,IAAMyB,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.9e485a3e.chunk.js","sourcesContent":["import { CircularProgress } from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core\";\nimport React, { FC } from \"react\";\n\nconst useStyle = makeStyles( () =>\n    ({\n        loading:{\n            position: \"absolute\",\n            top: \"0px\",\n            left: \"0px\",\n            height: \"100%\",\n            width: \"100%\"\n        },\n        circle:{\n            position: \"absolute\",\n            top: \"50%\",\n            left: \"50%\",\n            transform: \"translate(-50%, -50%)\"\n        }\n    }))\n\n\nconst Loading = () =>\n{\n    const classes = useStyle()\n    return(\n        <div className={classes.loading}>\n            <div className={classes.circle}>\n                <CircularProgress/>\n            </div>\n        </div>\n    )\n}\n\nexport default Loading","import React from \"react\"\nimport { Route } from \"react-router-dom\";\nimport { RouteItem } from \"./interface\";\n\nconst RouteWithSubRoutes: React.FC<RouteItem> = (route) => {\n    return (\n      <Route\n        path={route.path}\n        render={props => (\n          // pass the sub-routes down to keep nesting\n          <route.component {...props} routes={route.routes} />\n        )}\n      />\n    );\n  }\n\nexport default RouteWithSubRoutes","import Loading from '../pages/Loading';\nimport { RouteItem } from './interface';\nimport Loadable from 'react-loadable';\n\nconst Login = Loadable({\n    loader: () => import('../pages/Login'),\n    loading: Loading\n})\nconst Home = Loadable({\n  loader: () => import('../pages/Home/Home'),\n  loading: Loading\n})\nconst About = Loadable({\n  loader: () => import('../pages/Home/About'),\n  loading: Loading\n})\nconst Skill = Loadable({\n  loader: () => import('../pages/Home/Skill'),\n  loading: Loading\n})\nconst Project = Loadable({\n  loader: () => import('../pages/Home/Project'),\n  loading: Loading\n})\nconst LoadingPage = Loadable({\n  loader: () => import('../pages/Loading'),\n  loading: Loading\n})\n\n\n  //note: https://iter01.com/48207.html\n  const routes: Array<RouteItem> = [\n    {path: '/', exact: true, component: Login},\n    {path: '/Loading', exact: true, component: LoadingPage},\n    {path: '/Home', component: Home, routes: [\n      {path: '/Home', exact: true, component: About},\n      {path: '/Home/skill', exact: true, component: Skill},\n      {path: '/Home/project', exact: true, component: Project},\n    ]},\n    // {\n    //   path: '/:user/demos', component: Demos,\n    //   routes:[\n    //     {path: '/:user/demos/:demotitle', component: DemoView},\n    //   ]\n    // },\n  ]\n  export default routes","import React, { FC } from 'react';\nimport { HashRouter, Switch } from 'react-router-dom'\nimport RouteWithSubRoutes from './routes/RouteWithSubRoutes';\nimport routes from './routes';\n\nconst App: FC = () => {\n  return (\n    <HashRouter>\n      <Switch>\n        {\n          routes.map( ( route, i ) =>\n            (\n              <RouteWithSubRoutes key={i} {...route}/>\n            ))\n        }\n      </Switch>\n    </HashRouter>\n\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler): void => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport \"./assets/style/main.scss\"\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}